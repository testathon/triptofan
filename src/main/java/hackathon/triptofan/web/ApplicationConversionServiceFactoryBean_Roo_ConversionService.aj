// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package hackathon.triptofan.web;

import hackathon.triptofan.domain.Itenerary;
import hackathon.triptofan.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Itenerary, String> ApplicationConversionServiceFactoryBean.getIteneraryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<hackathon.triptofan.domain.Itenerary, java.lang.String>() {
            public String convert(Itenerary itenerary) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Itenerary> ApplicationConversionServiceFactoryBean.getIdToIteneraryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, hackathon.triptofan.domain.Itenerary>() {
            public hackathon.triptofan.domain.Itenerary convert(java.lang.Long id) {
                return Itenerary.findItenerary(id);
            }
        };
    }
    
    public Converter<String, Itenerary> ApplicationConversionServiceFactoryBean.getStringToIteneraryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, hackathon.triptofan.domain.Itenerary>() {
            public hackathon.triptofan.domain.Itenerary convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Itenerary.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getIteneraryToStringConverter());
        registry.addConverter(getIdToIteneraryConverter());
        registry.addConverter(getStringToIteneraryConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
